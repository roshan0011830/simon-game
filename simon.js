console.log("Welcome To Simon Game Babuji");

// 🧠 Game state arrays
let gameSequence = []; // Game sequence - generated by computer
let userSequence = []; // User sequence - buttons pressed by player

// 🚦Game flags & level
let isStarted = false;
let level = 0;

// 🎯 DOM element selections
let cText = document.querySelector("#center-text");     // Level display
let padArray = document.querySelectorAll(".colorPad");  // All colored pads
let startBtn = document.querySelector("#startBtn");     // Start button
let outCircle = document.querySelector(".outercircle"); // Container for pads

let lightSound = document.getElementById("lightSound"); //audio
let tapSound = document.getElementById("tapSound");
let levelSound = document.getElementById("levelSound");
let overSound = document.getElementById("overSound");

// 🚀 Start game when user clicks start
startBtn.addEventListener("click", function () {
  if (isStarted === false) {
    console.log("Start clicked! Game is starting...");
    isStarted = true;

    levelup();   // ✅ Go to level 1
    padFlash();  // ✅ Show first pad
  }
});

// 🟢 Flash a random pad and push it to gameSequence
function padFlash() {
  console.log("Flashing pad...");

  let ranIndex = Math.floor(Math.random() * padArray.length);
  let randomPad = padArray[ranIndex];

  // Flash pad
  if(randomPad.classList.contains("red")){
      setTimeout(() => {
            randomPad.classList.add("glow-red");
            lightSound.play();
        },600)
    
      setTimeout(() => {
        randomPad.classList.remove("glow-red");
      }, 900);
  }

  if(randomPad.classList.contains("yellow")){
      setTimeout(() => {
            randomPad.classList.add("glow-yellow");
            lightSound.play();
        },600)
    
      setTimeout(() => {
        randomPad.classList.remove("glow-yellow");
      }, 900);
  }
  
  if(randomPad.classList.contains("blue")){
      setTimeout(() => {
            randomPad.classList.add("glow-blue");
            lightSound.play();
        },600)
    
      setTimeout(() => {
        randomPad.classList.remove("glow-blue");
      }, 900);
  } 
  
  if(randomPad.classList.contains("green")){
      setTimeout(() => {
            randomPad.classList.add("glow-green");
            lightSound.play();
        },600)
    
      setTimeout(() => {
        randomPad.classList.remove("glow-green");
      }, 900);
  }

  // Add to game sequence
  gameSequence.push(randomPad);
  console.log("Game sequence array:", gameSequence);

  // Clear user's old inputs
  userSequence = [];
}

// 🔼 Increase level & update UI


// 👆 Detect user pad press
outCircle.addEventListener("click", function (e) {
  let clickedPad = e.target;

  // Filter out clicks that are not on .colorPad
  if (!clickedPad.classList.contains("colorPad")) return;

  console.log("User pressed:", clickedPad);

  // Flash effect for user press

  if(clickedPad.classList.contains("red")){
      clickedPad.classList.add("glow-red");
      tapSound.currentTime = 0;
      tapSound.play();
      setTimeout(() => {
        clickedPad.classList.remove("glow-red");
      }, 300);
  }
  if(clickedPad.classList.contains("yellow")){
      clickedPad.classList.add("glow-yellow");
      tapSound.currentTime = 0;
      tapSound.play();
      setTimeout(() => {
        clickedPad.classList.remove("glow-yellow");
      }, 300);
  }
  if(clickedPad.classList.contains("blue")){
      clickedPad.classList.add("glow-blue");
      tapSound.currentTime = 0;
      tapSound.play();
      setTimeout(() => {
        clickedPad.classList.remove("glow-blue");
      }, 300);
  }
  if(clickedPad.classList.contains("green")){
      clickedPad.classList.add("glow-green");
      tapSound.currentTime = 0;
      tapSound.play();
      setTimeout(() => {
        clickedPad.classList.remove("glow-green");
      }, 300);
  }







  // Push to user sequence
  userSequence.push(clickedPad);
  console.log("User sequence array:", userSequence);


//   ------------touf-----------
  // 🧪 Now check if user's latest move is correct
  checkUserMove(userSequence.length - 1); // ye last user ne jo pad kiya uska index


});

// ✅ Check if user's pressed pad is same as game's sequence
function checkUserMove(currentIndex) {
  if (userSequence[currentIndex] === gameSequence[currentIndex]) {
    console.log("Correct move");

    // Agar pura sequence match kar gaya, next level
    if (userSequence.length === gameSequence.length) {
      setTimeout(() => {
        levelup();
        padFlash();
      }, 1000);
    }
  } else {
    console.log("Game Over");


    
    // ❌ Game over: reset everything
    cText.innerHTML = "Game Over";
    overSound.currentTime = 0;
    overSound.play();

    




    isStarted = false;
    gameSequence = [];
    userSequence = [];
    level = 0;
  }
}

function levelup() {

    if(level > 0){
        cText.innerHTML = `${level}`;
        level++;
        levelSound.play();
    }else{
        cText.innerHTML = `${level}`;
        level++;
    }
}



